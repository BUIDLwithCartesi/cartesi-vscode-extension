{
"scopeName":"source.js",
"patterns" : [
    { "include": "#main" },
    {
        "name": "variable.other.method.js",
        "match": "(\\.\\s*)([_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)",
        "captures": {
          "1": {
            "name": "punctuation.accessor.js"
          },
          "2": {
            "name": "variable.other.method.js"
          }
        }
      },
      {
        "name": "variable.other.function.js",
        "match": "(\\.\\s*)([_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)",
        "captures": {
          "1": {
            "name": "punctuation.accessor.js"
          },
          "2": {
            "name": "variable.other.function.js"
          }
        }
      },
      {
        "name": "support.class.js",
        "match": "\\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\\b"
      },
      {
        "name": "support.class.error.js",
        "match": "\\b(?:[A-Z]\\w*)Error\\b"
      },
      {
        "name": "keyword.control.module.js",
        "match": "\\b(?:as|default|export|from|import)\\b"
      },
      {
        "name": "keyword.control.flow.js",
        "match": "\\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\\b"
      },
      {
        "name": "constant.language.null.js",
        "match": "\\bnull\\b"
      },
      {
        "name": "constant.language.undefined.js",
        "match": "\\bundefined\\b"
      },
      {
        "name": "keyword.operator.spread.js",
        "match": "\\.{3}"
      },
      {
        "name": "keyword.operator.arrow.js",
        "match": "=>"
      },
      {
        "name": "variable.other.readwrite.js",
        "match": "\\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\\b"
      },  
      {
        "name": "support.class.console.js",
        "match": "\\bconsole(?=\\s*\\.)"
      },
      {
        "name": "variable.other.class.js",
        "match": "(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+",
        "captures": {
          "1": {
            "name": "punctuation.accessor.js"
          },
          "2": {
            "name": "variable.other.class.js"
          }
        }
      },
    {
        "name" : "variable.other.method-variable.js",
        "match" : "(\\.\\s*)(?=\\bfunction-variable\\b)",
        "captures": {
            "1": {
                "name": "punctuation.accessor.js"
            }
        }
    },
    {
        "name" : "entity.name.function.method.js",
        "match": "(\\.\\s*)(?=\\bfunction-variable\\b)",
        "captures":{
            "1": {
                "name": "punctuation.accessor.js"
            }
        }
    },
    {
        "name" : "support.class.builtin.js",
        "match" : "\\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32|64)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Data|Error|Function|Int1|JSON|(?:weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|webAssembly)\\b"
    },
    {
        "name" : "support.class.error.js",
        "match" : "\\b(?:[A-Z]\\w*)Error\\b"
    },
    {
        "name" : "keyword.control.import.js",
        "match" : "(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)",
        "captures": {
            "1": {
                "name": "keyword.control.import.js"
            }
        }
    },
    {
        "name" : "keyword.control.export.js",
        "match" : "(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})",
        "captures": {
            "1": {
                "name": "keyword.control.export.js"
            }
        }
    },
    {
        "name" : "keyword.module.js",
        "match" : "\\b(?:as|default|export|from|import)\\b"
    },
    {
        "name" : "keyword.control.flow.js",
        "match" : "\\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\\b"
    },
    {
        "name" : "constant.language.null.js",
        "match" : "\\bnull\\b"
    },
    {
        "name" : "constant.language.undefined.js",
        "match" : "\\bundefined\\b"
    },
    {
        "name" : "Keyword.operator.spread.js",
        "match" : "\\.{3}"
    },
    {
        "name": "keyword.operator.arrow.js",
        "match": "=>"
    },
    {
        "name": "variable.other.property-access.js",
        "match": "(\\.\\s*)#?<ID>",
        "captures": {
            "1":{
                "name": "punctuation.accessor.js"
            }
        }
    },
    {
        "name": "support.class.maybe-class-name.js",
        "match": "(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+",
        "captures": {
            "1": {
                "name": "punctuation.accessor.js"
            }
        }
    },
    {
        "name": "variable.other.dom.js",
        "match": "\\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\\b"
    },
    {
        "name": "support.class.console.js",
        "match": "\\bconsole(?=\\s*\\.)"
    }
],

"repository" : {
    "main": [
        {
            "match": "\\b(function|return|if|else|for|while|var|let|const)\\b",
            "name": "keyword.control.js"
        },
        {
            "match": "\\b(true|false|null|undefined)\\b",
            "name": "constant.language.js"
        },
        {
            "match": "/\\*[^*]*\\*+(?:[^/*][^*]*\\*+)*/",
            "name": "comment.block.js"
        },
        {
            "match": "'(?:\\\\.|[^\\\\'])*'|\"(?:\\\\.|[^\\\\\"])*\"",
            "name": "string.quoted.js"
        },
        {
            "match": "\\b[0-9]+(\\.[0-9]+)?\\b",
            "name": "constant.numeric.js"
        }
    ],
    "function":{
        "patterns":[
            {
                "include": "#maybe-class-name"
            }
        ]
    },
    "function-variable": {
        "patterns":[
            {
                "include": "#maybe-class-name"
            }
        ]
    },
    "method": {
        "patterns":[
            {
                "include": "#maybe-class-name"
            }
        ]
    }, 
    "method-variable": {
        "patterns":[
            {
                "include": "#maybe-class-name"
            }
        ]
    },
    "property-access":{
        "patterns":[
            {
                "include": "#maybe-class-name"
            }
        ]
    },
    "maybe-class-name": {
        "patterns": [
          {
            "name": "support.class.maybe-class-name.js",
            "match": "^[A-Z][\\s\\S]*"
          }
        ]
      }   
}
}
